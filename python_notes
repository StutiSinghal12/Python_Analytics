High level 
rosumm 1991

by default python prints in newline
print('a','b',sep='@')
a@b
print(a)
print(b)
a
b
print('a','b',sep='#',end='@')
a#b@

end keyword prints letters in same line otherwise next line
for i in 'geeksforgeeks':
    print(i,end=' ')
o/p:-
g e e k s f o r g e e k s

python modules can be imported by import keyword and then its libraries can be used as functions.
import keyword
  
# printing all keywords at once using "kwlist()"
print("The list of keywords is : ")
print(keyword.kwlist)

in keyword we can use with if statement or for statemnet for looping

if 's' in 'geeksforgeeks':
    print("s is part of geeksforgeeks")
else:
    print("s is not part of geeksforgeeks")
    
for i in 'geeksforgeeks':
    print(i,end=' ')
    
question---> current version
import sys
print(sys.version)

question-->
\n \t for next line and space

question --> print current date and time 
import datetime
now = datetime.datetime.now()
print ("Current date and time : ")
print (now.strftime("%Y-%m-%d %H:%M:%S"))

question--> print in specific format using formatted string option and format option
# exam_st_date = (11, 12, 2014)
# day = exam_st_date[0]
# month = exam_st_date [1]
# year = exam_st_date [2]
# print(f'The examination will start from: {day}/{month}/{year}') 

exam_st_date = (11,12,2014)
print( "The examination will start from : {exam_st_date}".format(exam_st_date=exam_st_date).replace(',','/'))

numbers=input("enter numbers")
num=numbers.split(",")
print(numbers)
print(num)
print(tuple(num))

# Number of placeholders are four but
# there are only three values passed
 
# parameters in format function.
my_string = "{}, is a {} {} science portal for {}"
 
print(my_string.format("GeeksforGeeks", "computer", "geeks"))
Output : 

IndexError: tuple index out of range

# different datatypes can be used in formatting
print("Hi ! My name is {} and I am {} years old"
      .format("User", 19))
      
# Formatting of Integers
String1 = "{0:b}".format(16)
print("\nBinary representation of 16 is ")
print(String1)
 
# Formatting of Floats
String1 = "{0:e}".format(165.6458)
print("\nExponent representation of 165.6458 is ")
print(String1)
 
# Rounding off Integers
String1 = "{0:.2f}".format(1/6)
print("\none-sixth is : ")
print(String1)

A string can be left() or center(^) justified with the use of format specifiers, separated by a colon(:).  


# String alignment
String1 = "|{:<10}|{:^10}|{:>10}|".format('Geeks', 'for', 'Geeks')
print("\nLeft, center and right alignment with Formatting: ")
print(String1)
 
# To demonstrate aligning of spaces
String1 = "\n{0:^16} was founded in {1:<4}!".format("GeeksforGeeks", 2009)
print(String1)
Output: 

Left, center and right alignment with Formatting: 
|Geeks     |   for    |     Geeks|

Write a Python program to get a string made of the first 2 and the 
last 2 chars from a given a string. If the string length is less than 2, return instead of the empty string.
def fetch(ip):
  if len(ip)<2:
    return ' '
  else:
    return ip[0:2]+ip[-2:]

print(fetch('w3resource'))
print(fetch('w'))
print(fetch('w3456'))

o/p:-
w3ce
 
w356

Write a Python function that takes a list of words and return the longest word and the length of the longest one.
def lenof(words):
  word_len=[]
  for n in words:
    word_len.append((len(n),n))
  word_len.sort()
  return word_len[-1][0], word_len[-1][1]  
result=lenof(["php","python","exercises"])
print("\nLongest word: ",result[1])
print("Length of the longest word: ",result[0])

write program to sort words alphabetically

def lenof(words):
  word_len=[]
  for n in words:
    word_len.append(n)
  word_len.sort()
  return word_len
  
ip=input("enter words")
d=ip.split(',')

print(lenof(d))

diffrence between dates

from datetime import date
f_date = date(2014, 7, 2)
l_date = date(2014, 7, 11)
delta = l_date - f_date
print(delta.days)

Write a Python function to check whether a number is divisible by another number. Accept two integers values form the user.

def multiple(m, n):
	return True if m % n == 0 else False

print(multiple(20, 5))
print(multiple(7, 2))
